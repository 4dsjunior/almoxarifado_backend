from typing import Protocol, List, Optional
from core.entities.alerta import Alerta
from core.entities.almoxarifado import Almoxarifado
from core.entities.categoria import Categoria
from core.entities.cliente import Cliente
from core.entities.devolucao import Devolucao
from core.entities.entrada import Entrada
from core.entities.estoque import Estoque
from core.entities.fornecedor import Fornecedor
from core.entities.forma_pagto import FormaPagto
from core.entities.kit import Kit, KitMontado
from core.entities.marca import Marca
from core.entities.modelo import Modelo
from core.entities.ordem_servico import OrdemServico
from core.entities.ordem_servico_produto import OrdemServicoProduto
from core.entities.saida import Saida
from core.entities.usuario import Usuario
from core.entities.log_alteracao import LogAlteracao
# Adicione novas imports conforme surgirem novas entidades!

# ---------- ALERTA ----------


class AlertaRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[Alerta]: ...
    def list_all(self) -> List[Alerta]: ...
    def add(self, alerta: Alerta) -> Alerta: ...
    def update(self, alerta: Alerta) -> Alerta: ...
    def delete(self, idcodigo: int) -> None: ...

# ---------- ALMOXARIFADO ----------


class AlmoxarifadoRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[Almoxarifado]: ...
    def list_all(self) -> List[Almoxarifado]: ...
    def add(self, almoxarifado: Almoxarifado) -> Almoxarifado: ...
    def update(self, almoxarifado: Almoxarifado) -> Almoxarifado: ...
    def delete(self, idcodigo: int) -> None: ...

# ---------- CATEGORIA ----------


class CategoriaRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[Categoria]: ...
    def list_all(self) -> List[Categoria]: ...
    def add(self, categoria: Categoria) -> Categoria: ...
    def update(self, categoria: Categoria) -> Categoria: ...
    def delete(self, idcodigo: int) -> None: ...

# ---------- CLIENTE ----------


class ClienteRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[Cliente]: ...
    def list_all(self) -> List[Cliente]: ...
    def add(self, cliente: Cliente) -> Cliente: ...
    def update(self, cliente: Cliente) -> Cliente: ...
    def delete(self, idcodigo: int) -> None: ...

# ---------- DEVOLUCAO ----------


class DevolucaoRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[Devolucao]: ...
    def list_all(self) -> List[Devolucao]: ...
    def add(self, devolucao: Devolucao) -> Devolucao: ...
    def list_by_produto(self, id_produto: int) -> List[Devolucao]: ...

# ---------- ENTRADA ----------


class EntradaRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[Entrada]: ...
    def list_all(self) -> List[Entrada]: ...
    def add(self, entrada: Entrada) -> Entrada: ...
    def list_by_produto(self, id_produto: int) -> List[Entrada]: ...

# ---------- ESTOQUE ----------


class EstoqueRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[Estoque]: ...
    def get_by_barcode(self, cod_de_barras: str) -> Optional[Estoque]: ...
    def list_all(self) -> List[Estoque]: ...
    def add(self, item: Estoque) -> Estoque: ...
    def update(self, item: Estoque) -> Estoque: ...
    def delete(self, idcodigo: int) -> None: ...

# ---------- FORNECEDOR ----------


class FornecedorRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[Fornecedor]: ...
    def list_all(self) -> List[Fornecedor]: ...
    def add(self, fornecedor: Fornecedor) -> Fornecedor: ...
    def update(self, fornecedor: Fornecedor) -> Fornecedor: ...
    def delete(self, idcodigo: int) -> None: ...

# ---------- FORMA PAGTO ----------


class FormaPagtoRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[FormaPagto]: ...
    def list_all(self) -> List[FormaPagto]: ...
    def add(self, forma: FormaPagto) -> FormaPagto: ...
    def update(self, forma: FormaPagto) -> FormaPagto: ...
    def delete(self, idcodigo: int) -> None: ...

# ---------- KIT ----------


class KitRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[Kit]: ...
    def list_all(self) -> List[Kit]: ...
    def add(self, kit: Kit) -> Kit: ...
    def update(self, kit: Kit) -> Kit: ...
    def delete(self, idcodigo: int) -> None: ...

# ---------- KIT MONTADO ----------


class KitMontadoRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[KitMontado]: ...
    def list_all(self) -> List[KitMontado]: ...
    def add(self, kit_montado: KitMontado) -> KitMontado: ...
    def update(self, kit_montado: KitMontado) -> KitMontado: ...
    def delete(self, idcodigo: int) -> None: ...
    def list_by_kit(self, idkit: int) -> List[KitMontado]: ...

# ---------- MARCA ----------


class MarcaRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[Marca]: ...
    def list_all(self) -> List[Marca]: ...
    def add(self, marca: Marca) -> Marca: ...
    def update(self, marca: Marca) -> Marca: ...
    def delete(self, idcodigo: int) -> None: ...

# ---------- MODELO ----------


class ModeloRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[Modelo]: ...
    def list_all(self) -> List[Modelo]: ...
    def add(self, modelo: Modelo) -> Modelo: ...
    def update(self, modelo: Modelo) -> Modelo: ...
    def delete(self, idcodigo: int) -> None: ...

# ---------- ORDEM SERVIÇO ----------


class OrdemServicoRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[OrdemServico]: ...
    def list_all(self) -> List[OrdemServico]: ...
    def add(self, ordem_servico: OrdemServico) -> OrdemServico: ...
    def update(self, ordem_servico: OrdemServico) -> OrdemServico: ...
    def delete(self, idcodigo: int) -> None: ...

# ---------- ORDEM SERVIÇO PRODUTOS ----------


class OrdemServicoProdutoRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[OrdemServicoProduto]: ...
    def list_all(self) -> List[OrdemServicoProduto]: ...
    def add(self, os_prod: OrdemServicoProduto) -> OrdemServicoProduto: ...
    def update(self, os_prod: OrdemServicoProduto) -> OrdemServicoProduto: ...
    def delete(self, idcodigo: int) -> None: ...
    def list_by_ordem_servico(
        self, id_ordem: int) -> List[OrdemServicoProduto]: ...

# ---------- SAIDA ----------


class SaidaRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[Saida]: ...
    def list_all(self) -> List[Saida]: ...
    def add(self, saida: Saida) -> Saida: ...
    def list_by_produto(self, id_produto: int) -> List[Saida]: ...

# ---------- USUÁRIO (Autenticação) ----------


class UsuarioRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[Usuario]: ...
    def get_by_login(self, login: str) -> Optional[Usuario]: ...
    def list_all(self) -> List[Usuario]: ...
    def add(self, usuario: Usuario) -> Usuario: ...
    def update(self, usuario: Usuario) -> Usuario: ...
    def delete(self, idcodigo: int) -> None: ...

# ---------- LOG/AUDITORIA ----------


class LogAlteracaoRepository(Protocol):
    def get_by_id(self, idcodigo: int) -> Optional[LogAlteracao]: ...
    def list_all(self) -> List[LogAlteracao]: ...
    def add(self, log: LogAlteracao) -> LogAlteracao: ...
    def list_by_tabela(self, nome_tabela: str) -> List[LogAlteracao]: ...

# --- Adicione outras interfaces conforme expandir o projeto ---
